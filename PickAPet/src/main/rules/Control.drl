package com.petpicker

import java.util.ArrayList;
  import java.io.BufferedReader;
  import java.io.IOException;
  import java.io.InputStreamReader;
  
global MainWindow mw

rule "allergyGeneral"
	salience 1
    when
		Person(allergy=="undefined")
    then
        mw.setQuestion(false, "Czy jesteś alergikiem?", "allergy", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});   
end

rule "allergySpecificI"
	salience 2
	when
		Person(allergy=="tak" && allergyType=="undefined" && family=="undefined")
	then
		mw.setQuestion(false, "Jaki typ alergii posiadasz?", "allergyType" ,new ArrayList<String>() {{
    add("na psy");
    add("na koty");
    add("na większość zwierząt z sierścią");
}});
end

rule "allergySpecificII"
	salience 3
	when
		Person(familyAllergyType=="undefined" && familyAllergy=="tak")
	then
		mw.setQuestion(false, "Jaki typ alergii posiada członek twojej rodziny?", "familyAllergyType" ,new ArrayList<String>() {{
    add("na psy");
    add("na koty");
    add("na większość zwierząt z sierścią");
}});
end

rule "age"
	salience -1
    when
		Person(age=="undefined")
		Pet(timeRequirements!="undefined")
    then
    	mw.setQuestion(false, "Ile masz lat?", "age", new ArrayList<String>() {{
    add("poniżej 25");
    add("26-60");
    add("powyżej 60");
}});
end


rule "timeRequirements"
	salience -1
    when
		Pet(timeRequirements=="undefined")
    then
    	mw.setQuestion(true, "Ile godzin dziennie jesteś w stanie poświęcić zwierzęciu?", "timeRequirements", new ArrayList<String>() {{
    add("poniżej 0.5");
    add("1-2");
    add("powyżej 2");
}});
end

rule "family"
	salience 4
    when
		Person(family=="undefined" && allergy!="undefined")
    then
    	mw.setQuestion(false, "Czy masz rodzinę?", "family", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "timeAtHome"
	salience 4
    when
		Person(family=="nie" && timeAtHome=="undefined")
    then
    	mw.setQuestion(false, "Czy spędzasz dużo czasu poza domem?", "timeAtHome", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "familyAllergy"
	salience 5
    when
		Person(family=="tak" && familyAllergy=="undefined")
    then
    	mw.setQuestion(false, "Czy ktoś z twojej rodziny ma alergię?", "familyAllergy", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "children"
	salience 6
    when
		Person(family=="tak" && children=="undefined")
    then
    	mw.setQuestion(false, "Czy masz dzieci?", "children", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "childrenAge"
	salience 6
    when
		Person(children=="tak" && childrenAge=="undefined")
    then
    	mw.setQuestion(false, "Ile lat ma twoje najmłodsze dziecko?", "childrenAge", new ArrayList<String>() {{
    add("0-7");
    add("7-13");
    add("powyżej 13");
}});
end

rule "childFriendliness"
	salience 6
    when
		Person(children=="tak" && childrenAge=="0-7")
		a: Pet(childFriendliness=="undefined")
    then
    	modify (a) {setChildFriendliness("tak")};
end

rule "otherAnimals"
	salience 20
    when
		(or Person(otherAnimals == "undefined" && allergy=="nie" && familyAllergy=="nie")
		     Person(otherAnimals == "undefined" && allergy=="nie" && family=="nie"))
    then
    	mw.setQuestion(false, "Czy posiadasz zwierzęta?", "otherAnimals", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "otherAnimalsSpecific"
	salience 20
    when
		Person(otherAnimals == "tak")
		Pet(otherAnimalsFriendliness == "undefined")
    then
    	mw.setQuestion(true, "Jakie to zwierzęta?", "otherAnimalsFriendliness", new ArrayList<String>() {{
    add("psy");
    add("koty");
    add("inne");
}});
end

rule "cost"
	salience 21
	when 
		Pet(cost=="undefined")
		Person(family!="undefined")
	then
	    	mw.setQuestion(true, "Jaki powinien być koszt utrzymania zwierzęcia", "cost", new ArrayList<String>() {{
    add("jak najmniejszy");
    add("umiarkowany");
    add("bez znaczenia");
}});
end 

rule "lifeExpectancy"
	salience 22
	when 
		Pet(lifeExpectancy=="undefined")
		Person(family!="undefined")
	then
	    	mw.setQuestion(true, "Jaka powinna być średnia długość życia zwierzęcia", "lifeExpectancy", new ArrayList<String>() {{
    add("poniżej 7");
    add("7-12");
    add("powyżej 12");
    add("bez znaczenia");
}});
end 

rule "activity"
	salience 24
	when
		Person(activity == "undefined")
		Pet(timeRequirements != "poniżej 0.5")
		Pet(lifeExpectancy != "poniżej 7")
	then
		mw.setQuestion(false, "Jak oceniasz swoją aktywność fizyczną?", "activity", new ArrayList<String>() {{
    add("niska");
    add("średnia");
    add("wysoka");
}});
end 

rule "home"
	salience 25
	when
		Person(homeType == "undefined" && allergy=="nie" && familyAllergy=="nie")
		Pet(timeRequirements != "poniżej 0.5")
	then
	    	mw.setQuestion(false, "Gdzie mieszkasz", "homeType", new ArrayList<String>() {{
    add("w domu jednorodzinnym");
    add("w mieszkaniu");
}});
end

rule "homeSurroundingsHouse"
	salience 26
	when
		Person (homeType=="w domu jednorodzinnym")
	then
		    	mw.setQuestion(false, "Czy posiadasz ogród", "homeSurroundings", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end

rule "homeSurroundingsFlat"
	salience 26
	when
		Person (homeType=="w mieszkaniu")
	then
		    	mw.setQuestion(false, "Czy w pobliżu twojego mieszkania znajdują się tereny zielone?", "homeSurroundings", new ArrayList<String>() {{
    add("tak");
    add("nie");
}});
end
		

